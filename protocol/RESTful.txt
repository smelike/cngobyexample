设计 API


问题：

1、怎么让接口 URL 设计的合理；

2、数据格式怎么定；

3、错误码怎么处理；

4、怎么才能合适的描述我的 API；

5、API 怎么认证用户的请求；


广义的 API（Application Programming Interface）是指应用程序编程接口，包括在操作系统中的动态链接库文件，如：dll\so。

或者基于 TCP 层的 socket 链接，用来提供预定义的方法和函数，调用者无需访问源码和理解内部原理，便可以实现相应功能。


而当前通常指通过HTTP 协议传输的 web service 技术。

API 在概念上和语言无关，理论上具有网络操作能力的所有编程语言都可以提供 API 服务。


Java、PHP、Node 甚至 C 都可以实现 web API，都是通过相应 HTTP 请求兵构造 HTTP 包赖完成的，但是内容不实现原理不同。

例如 QQ 邮箱就是通过使用了 C 构建 CGI 服务器实现的。


API 在概念上和 JSON 和 XML 等媒体类型无关，JSON 和 XML 只是一种传输或媒体格式，便于计算机解析和读取数据，因此都有一个共同特点就是具有几个基本数据类型，
同时提供了嵌套和列表的数据表达方式。

JSON 因为更加轻量、容易解析、和 JavaScript 天生集成，因此成为现在主流传输格式。

在特殊的场景下，可以构造自己的传输格式，例如 JSONP 传输的实际上是一段 JavaScript 代码来实现跨域。


API 设计的目的是什么呢？

目的是为了让程序刻度，应当遵从简单、易用、无状态等特性，这也是为什么 Restful 风格流行的原因。


---

RESTful


Restful = 有意义的 URL + 合适的 HTTP 动词

REST（Representational State Transfer，简称 REST），RESTful 是一种对基于 HTTP 的应用设计风格，只是提供了一组设计原则和约束条件，而不是一种标准。

Restful 定义 URI 和 HTTP 状态码，让你的 API 设计变得更简洁、清晰和富有层次，对缓存等实现更有帮助。


从本质上理解 RESTful，它其实是尽可能复用 HTTP 特性来规范软件设计，甚至提高传输效率。

HTTP 包处于网络应用层，因此 HTTP 包为平台无关的字符串表示，如果尽可能的使用 HTTP 包特征而不是大量在 body 定义自己的原则，可以用更简洁、清晰、高效的方式实现同样的需求。


---

Verb/Location

GET  /users/

GET  /users/1

POST /users

DELETE  /users/1

	
